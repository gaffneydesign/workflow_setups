.test-comp-x {
  @extend %component;

  @extend %primary-solid;
}

.test-comp-y {
  @extend %component;

  @extend %primary-outline;
}

@mixin colorChips($cMap) {
    @each $color, $value in $cMap {
      $i: index($cMap, $color $value) + 1;

      .color:nth-child(#{$i}) .swatch {
        background-color: $value;
        color: set-text-color($value);
      }
    }
};

.color-chart {
  & > div {
    display: flex;
    flex-flow: wrap;
    justify-content: space-around;
    margin: 0 ($el-pad * -1) beat(2);

    h3 {
      flex: 0 0 100%;
      padding-left: $el-pad;
      padding-bottom: calc(#{beat(1)} - 1px);
      border-bottom: 1px solid $gray;
      margin-bottom: beat(2);
    }

    .swatch {
      @extend %small-type;

      @extend %component-compact;

      width: $line-height * 2rem;
      height: $line-height * 2rem;
      border-radius: 50%;
      border-color: rgba(0, 0, 0, 0.5);
      white-space: nowrap;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    &.shading {
      @include colorChips($grayscale);
    }

    &.primary {
      @include colorChips($primary);

      .color:nth-child(12) .swatch {
        border: 3px solid $black;
      }
    }

    &.accent {
      @include colorChips($accent);
    }

    &.secondary {
      @include colorChips($secondary);
    }

    &.tertiary {
      @include colorChips($tertiary);
    }

    &.quarternary {
      @include colorChips($quarternary);
    }

    &.info {
      @include colorChips($info);
    }

    &.warning {
      @include colorChips($warning);
    }

    &.danger {
      @include colorChips($danger);  
    }

    &.success {
      @include colorChips($success);
    }
  }
}