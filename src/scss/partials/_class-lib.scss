@import 'mixins';

%x-small-type {
  @include typesetter(x-small-type);
}

%small-type {
  @include typesetter(small-type);
}

%base {
  font-weight: normal;
}

%large-type {
  @include typesetter(large-type);
}

%x-large-type {
  @include typesetter(x-large-type);
}

%xx-large-type {
  @include typesetter(xx-large-type);
}

%primary-head {
  @include typesetter(primary-head);
}


@include responsive(xs) {

  %x-small-type {
    @include nrwtypesetter(x-small-type);
  }

  %small-type {
    @include nrwtypesetter(small-type);
  }

  %base {
    font-weight: normal;
  }

  %large-type {
    @include nrwtypesetter(large-type);
  }

  %x-large-type {
    @include nrwtypesetter(x-large-type);
  }

  %xx-large-type {
    @include nrwtypesetter(xx-large-type);
  }

  %primary-head {
    @include nrwtypesetter(primary-head);
  }



};


%container {
  margin: 0 auto;
  max-width: $screen-lg;
  padding: 0 $el-pad;
}

%component {
  border: 1px solid $comp-border;
  border-radius: $border-radius-base;
  margin: beat(2) 0;
  padding: calc(#{beat(2)} - 1px) $el-pad;
}

%component-compact {
  @extend %component;

  padding: calc(#{beat(1)} - 1px) $el-pad;
}


@mixin classMaker($colorMap, $mapName) {
  @each $name, $colorVal in $colorMap {
    %#{$mapName}-#{$name} {
      color: $colorVal;
    }
    %#{$mapName}-bg-#{$name} {
      background-color: $colorVal;
    }
    %#{$mapName}-brd-#{$name} {
      border-color: $colorVal;
    }
  }
}
@include classMaker($primary,'primary');
@include classMaker($accent,'accent');
@include classMaker($secondary,'secondary');
@include classMaker($tertiary,'tertiary');


@mixin comp-colors-solid($state--color) {
  background-color: map-get($state--color, 'base');
  border-color: map-get($state--color, '10');
  color: set-text-color(map-get($state--color, 'base'));
}

@mixin comp-colors-outline($state--color) {
  background-color: map-get($state--color, '10');
  border-color: map-get($state--color, 'base');
  color: set-text-color(map-get($state--color, '10'));
}


%primary-solid {
  @include comp-colors-solid($primary);
}

%primary-outline {
  @include comp-colors-outline($primary);
}

%secondary-solid {
  @include comp-colors-solid($secondary);
}

%secondary-outline {
  @include comp-colors-outline($secondary);
}

%tertiary-solid {
  @include comp-colors-solid($tertiary);
}

%tertiary-outline {
  @include comp-colors-outline($tertiary);
}

%accent-solid {
  @include comp-colors-solid($accent);
}

%accent-outline {
  @include comp-colors-outline($accent);
}
