.component {
  @extend %component;
}

.well-inverse {
  @extend %component;

  @extend %grayscale-solid;
}

.well {
  @extend %component;

  @extend %grayscale-outline;
}

//
@mixin componentizer($the-color) {
  .#{$the-color}-solid {
    @extend %component;

    @extend %#{$the-color}-solid;
  }

  .#{$the-color}-outline {
    @extend %component;

    @extend %#{$the-color}-outline;
  }
}

@mixin logme($the-color) {
  @debug $the-color;
}

@each $color, $value in $brand {
  @include componentizer($color);
}

.card {
  @extend %component;

  box-shadow: $shadow-base-2;
  box-sizing: border-box;
  padding: 0;

  & > * {
    padding: 0 $table-sides;

    &:first-child {
      border-radius: $border-radius-base $border-radius-base 0 0;
      padding-top: calc(#{beat(1)} - 1px);
    }

    &:last-child {
      border-radius: 0 0 $border-radius-base $border-radius-base;
      padding-bottom: calc(#{beat(1)} - 1px);
    }
  }

  .card-head {
    background: $comp-bg-shade;
    margin: 0 0 beat(1);
    padding-bottom: beat(1);
  }

  .card-foot {
    background: $comp-bg-shade;
    margin: 0;
    padding-top: beat(1);
  }
}

@include apply-colors('.card', 'outline');

.alert {
  @extend .card;

  margin-bottom: beat(4);

  .alert-head {
    @extend %large-type;

    @extend .card-head;
  }

  & > *:last-child {
    margin-bottom: 0;
  }
}

@include apply-colors('.alert', 'outline');

.btn {
  @extend %component;

  border-radius: $border-radius-large;
  line-height: $line-height;
}

.btn-sm {
  @extend %component-compact;

  @extend %small-type;
}

.btn {
  cursor: pointer;
  letter-spacing: .05em;
  text-align: center;

  &-default {
    @extend %primary-outline;
  }

  &-disabled {
    @extend %grayscale-outline;
  }

  &:hover {
    background-image: linear-gradient(to bottom, rgba(255, 255, 255, .35) 0%, rgba(255, 255, 255, 0) 100%);
  }
}

@include apply-colors('.btn', 'solid');

a.btn {
  color: $white;
  display: inline-block;
  text-decoration: none;

  &:hover {
    color: $white;
  }

  &.btn-default {
    color: $black;

    &:hover {
      color: $black;
    }
  }
}

.btn-disabled,
a.btn-disabled {
  color: $gray-safer;

  &:hover {
    background-image: none;
    color: $gray-safer;
    cursor: not-allowed;
  }
}

.btn-link,
a.btn-link {
  background-color: transparent;
  border-color: transparent;
  color: $link-color;
  text-decoration: underline;

  &:hover {
    color: $link-color-hover;
  }
}

.label {
  @extend %small-type;

  @extend %component-compact;

  border: 0;
  border-radius: $border-radius-small;
  padding: beat(1) $table-sides;
}

@include apply-colors('.label', 'solid');

.table {
  @each $color, $value in $brand {
    .#{$color} {
      @extend %#{$color}-outline;
    }
  }
}
